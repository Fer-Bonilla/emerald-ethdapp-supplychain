// Contracts/Emeral.sol
// SPDX-License-Identifier: MIT
pragma solidity >=0.6.0 <0.8.0;

import "./EmeraldProperties.sol";
import "./EmeraldStates.sol";

contract Emerald {
  
    // Product identification and owndership
    uint sku;  // Stock Keeping Unit (SKU)
    uint upc; // Universal Product Code (UPC), generated by the Farmer, goes on the package, can be verified by the Consumer
    address ownerID;  // Metamask-Ethereum address of the current owner as the product moves through 8 stages
    
    // Product origin information
    address payable originMinerID; // Metamask-Ethereum address of the Farmer
    //Mine mine; // Mine information
    string originMineName;
    string originMineInformation;
    string originMineLatitude;
    string originMineLongitude;

    uint productID;  // Product ID potentially a combination of upc + sku
    EmeraldStates.State emeraldState;// Emerald state as represented in the enum above

    // Detailed emerald infomation
    string scaleInfo;
    string certifiedProperties;
    string manofactureInfo;

    uint marketPrice; // Emerald's market price

    // Roles applied along the emerald lifecycle 
    address laboratoryID;  // Metamask-Ethereum address of the Laboratory
    address custodianID; // Metamask-Ethereum address of the Custodian
    address payable manufacturerID; // Metamask-Ethereum address of the Manufacturer (Cutter)
    address payable customerID; // Metamask-Ethereum address of the Customer
 
    constructor() {   }

    function SetExtractionInfo(
        uint _sku,
        uint _upc,
        address payable _originMinerID,
        string memory _originMineName,
        string memory _originMineInformation, 
        string memory _originMineLatitude, 
        string memory _originMineLongitude)
        public
        {
        
        sku = _sku;
        upc = _upc;
        ownerID = _originMinerID;
        originMinerID = _originMinerID;
        originMineName = _originMineName;
        originMineInformation = _originMineInformation; 
        originMineLatitude = _originMineLatitude;
        originMineLongitude = _originMineLongitude;
     
        //mine.SetMineInfo(_originMineName, _originMineInformation, _originMineLatitude, _originMineLongitude);
        productID = sku + _upc;
        emeraldState = EmeraldStates.State.Mined;
        marketPrice = 0;
        laboratoryID = address(0); 
        custodianID = address(0);
        manufacturerID = address(0);
        customerID = address(0);
    }

    function SetScaleInfo(
        string memory _scaleInfo)
        public
        {
                
        scaleInfo = _scaleInfo;

    }

    function SetCertifiedInfo(string memory _certifiedProperties)
        public
        {
                
        certifiedProperties = _certifiedProperties;

    }

    function SetManufacturedInfo(string memory _manofactureInfo)
        public
        {
                
        manofactureInfo = _manofactureInfo;
    }

    function SetEmeraldState(EmeraldStates.State _state)  public {
        emeraldState = _state; 
    }

    function SetOwnerID(address _newOwnerID) public {
        ownerID = _newOwnerID; 
    }    

    function AuthorizeLab(address _laboratoryID) public {
        laboratoryID = _laboratoryID;
    }

    function AuthorizeCustodian(address _custodianID) public {
        custodianID = _custodianID;
    }

    function SetManufacturerID(address payable _manufacturerID) public {
        manufacturerID = _manufacturerID;
    }

    function SetCustomerID(address payable _customerID) public {
        customerID = _customerID;
    }

    function GetSku() public view returns (uint){
        return sku;
    }

    function GetUpc() public view returns (uint){
        return upc;
    }

    function GetProductID() public view returns (uint){
        return productID;
    }    

    function GetOwnerID() public view returns (address){
        return ownerID;
    }

    function getOriginMinerID() public view returns (address payable){
        return originMinerID;
    }
    
    function GetMarketPrice() public view returns (uint){
        return marketPrice;
    }

    function SetMarketPrice(uint _marketPrice) public {
        marketPrice = _marketPrice;
    }

    function GetCustomerID() public view returns (address payable){
        return customerID;
    }

    function GetCustodianID() public view returns (address){
        return custodianID;
    }

    function GetLaboratoryID() public view returns (address){
        return laboratoryID;
    }

    function getManufacturerID() public view returns (address payable){
        return manufacturerID;
    }         

    function GetEmeraldState() public view returns (EmeraldStates.State){
        return emeraldState;
    }

    function GetMineName() public view returns (string memory){
         return originMineName;
    }

    function GetMineInformation() public view returns (string memory){
         return originMineInformation;
    }

    function GetMineLatitude() public view returns (string memory){
         return originMineLatitude;
    }
    function GetMineLongitude() public view returns (string memory){
         return originMineLongitude;
    }

    function GetBasicInfo() public view returns (bytes memory){
        return(
            abi.encode(sku,
                       upc,
                       originMinerID,
                       originMinerID,
                       originMineName,
                       originMineInformation,
                       originMineLatitude,
                       originMineLongitude)
        );
    }

    function GetDetailedInfo() public view returns (bytes memory){
        return(
            abi.encode(sku,
                       upc,
                       productID,
                       marketPrice,
                       emeraldState,
                       laboratoryID,
                       custodianID,
                       manufacturerID,
                       customerID)
        );
    }

}